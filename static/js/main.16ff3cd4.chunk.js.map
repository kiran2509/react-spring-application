{"version":3,"sources":["logo.svg","http-axios.js","service/tutorialService.js","components/addTutorialComponent.js","components/tutorialListComponent.js","components/editTutorialComponent.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","tutorial","post","put","delete","title","AddTutorial","props","handleBlur","field","setState","touched","state","handleChange","event","target","name","value","errors","length","description","saveTutorial","data","TutorialDataService","then","response","published","submitted","console","log","catch","error","handleSubmit","preventDefault","addTutorial","this","isEnabled","className","onClick","onSubmit","htmlFor","type","onBlur","onChange","noValidate","style","color","disabled","Component","TutorialList","changeTitle","searchTitle","searchByTitle","findByTitle","tutorials","setActiveTutorial","index","currentTutorial","currentIndex","refreshList","retrieveTutorials","removeTutorials","deleteAll","bind","getAll","placeholder","map","removeAllTutorials","to","EditTutorial","getTutorial","onChangeTitle","prevState","onChangeDescription","updatePublished","status","update","updateTutorial","message","deleteTutorial","history","push","match","params","App","href","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16ff3cd4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: `http://localhost:8080/tts/`,\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n});\r\n","\r\nimport http from '../http-axios';   \r\n\r\nclass TutorialDataService{\r\n\r\n    getAll(){\r\n        \r\n        return http.get(`tutorials`)\r\n    }\r\n\r\n    get(id){\r\n        return http.get(`/tutorial/${id}`);\r\n    }\r\n\r\n    create(tutorial){\r\n        return http.post(\"/tutorials\",tutorial);\r\n    }\r\n\r\n    update(id,tutorial){\r\n        return http.put(`/tutorial/${id}`,tutorial);\r\n    }\r\n\r\n    delete(id){\r\n        return http.delete(`/tutorial/${id}`);\r\n    }\r\n\r\n    deleteAll(){\r\n        return http.delete(\"/tutorials\")\r\n    }\r\n\r\n    findByTitle(title){\r\n        return http.get(`/tutorials?title=${title}`);\r\n    }\r\n}\r\n\r\nexport default new TutorialDataService();","import React ,{ Component} from 'react';\r\nimport TutorialDataService from '../service/tutorialService';\r\n\r\nclass AddTutorial extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             id:null,\r\n             title: '',\r\n             description: '',\r\n             published: false,\r\n             submitted: false,\r\n             errors:{\r\n                 title:'',\r\n                 description:''\r\n             },\r\n             touched:{\r\n                 title:false,\r\n                 description:false\r\n             }\r\n        }\r\n    }\r\n\r\n    handleBlur = (field)  =>{\r\n\r\n        this.setState({\r\n            touched: {\r\n                ...this.state.touched,\r\n                [field]: true\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const {name,value} = event.target\r\n        const errors = this.state.errors\r\n\r\n        if(name === 'title'){\r\n            errors.title = this.state.title.length === 0 ?  'Field should not be empty' : '';\r\n        }\r\n        if(name === 'description'){\r\n            errors.description = this.state.description.length === 0 ?  'Field should not be empty' : '';\r\n        }\r\n\r\n        this.setState({ errors, [name]:value  })\r\n    }\r\n    \r\n    saveTutorial = () => {\r\n\r\n        var data = {\r\n            title : this.state.title,\r\n            description : this.state.description\r\n        }        \r\n\r\n        TutorialDataService.create(data)\r\n                .then(response => {\r\n                    this.setState({\r\n                        id: response.data.id,\r\n                        title: response.data.title,\r\n                        description: response.data.description,\r\n                        published: response.data.published,\r\n                        submitted : true\r\n                    });\r\n                    console.log(response.data);\r\n                })\r\n                .catch(error =>console.error(error))\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        console.log(`${this.state.title} ${this.state.description}`)\r\n    }\r\n\r\n\r\n    addTutorial = () => {\r\n        this.setState({\r\n            id: null,\r\n            title: '',\r\n            description: '',\r\n            published: false,\r\n            submitted: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {errors,title,description,touched} = this.state\r\n        const isEnabled = title.length>0 && description.length>0\r\n        return (\r\n        <div className=\"submit-form\">\r\n                    {this.state.submitted ? (\r\n                        <div>\r\n                            <h5>You have successfully submitted</h5>\r\n                            <button className=\"btn btn-success\" onClick={this.addTutorial}>Add</button>\r\n                        </div>\r\n                    ):(\r\n                    <div>\r\n                        <form onSubmit={ this.handleSubmit }>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            value={this.state.title}\r\n                            onBlur={()=>this.handleBlur(\"title\") }\r\n                            onChange={this.handleChange}\r\n                            noValidate\r\n                            />\r\n                            {errors.title  && <span style={{color:'#ff0000'}}>{errors.title}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            value={this.state.description}\r\n                            onBlur={()=> this.handleBlur(\"description\")}\r\n                            onChange={this.handleChange}\r\n                            noValidate\r\n                            />\r\n                             {errors.description  && <span style={{color:'#ff0000'}}>{errors.description}</span>}\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-success\" disabled={!isEnabled} onClick={this.saveTutorial}>Submit</button>\r\n                        </form>\r\n                    </div>\r\n                    )}\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTutorial","\r\nimport React,{Component} from 'react';\r\nimport TutorialDataService from '../service/tutorialService'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass TutorialList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             tutorials:[],\r\n             currentTutorial: null,\r\n             currentIndex: -1,\r\n             searchTitle: \"\"\r\n        }\r\n        this.retrieveTutorials = this.retrieveTutorials.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.retrieveTutorials();\r\n    }\r\n\r\n    retrieveTutorials () {\r\n        TutorialDataService.getAll()\r\n            .then(response => {\r\n                this.setState({ \r\n                    tutorials: response.data\r\n                })\r\n                console.log(response.data)\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    changeTitle = (event) =>{\r\n        this.setState({ searchTitle: event.target.value})\r\n    }\r\n\r\n    searchByTitle = () =>{\r\n\r\n        TutorialDataService.findByTitle(this.state.searchTitle)\r\n                .then(response =>{\r\n                    this.setState({ \r\n                        tutorials: response.data\r\n                    });\r\n                    console.log(response.data);\r\n                })\r\n                .catch(error => console.log(error))\r\n    }\r\n\r\n    setActiveTutorial = (tutorial,index) =>{\r\n        this.setState({\r\n            currentTutorial: tutorial,\r\n            currentIndex: index\r\n        })\r\n    }\r\n\r\n    refreshList = () =>{\r\n        this.retrieveTutorials();\r\n        this.setState({\r\n            currentTutorial: null,\r\n            currentIndex: -1\r\n        })\r\n\r\n    }\r\n\r\n    removeTutorials = () =>{\r\n\r\n        TutorialDataService.deleteAll()\r\n            .then(response =>{\r\n               console.log(response.data);\r\n               this.refreshList();\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { tutorials, currentTutorial,currentIndex,searchTitle } = this.state\r\n            return (\r\n                <div className=\"list row\">\r\n                  <div className=\"col-md-8\">\r\n                    <div className=\"input-group mb-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search by title\"\r\n                        value={searchTitle}\r\n                        onChange={this.changeTitle}\r\n                      />\r\n                      <div className=\"input-group-append\">\r\n                        <button\r\n                          className=\"btn btn-outline-secondary\"\r\n                          type=\"button\"\r\n                          onClick={this.searchByTitle}\r\n                        >\r\n                          Search\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <h4>Tutorials List</h4>\r\n          \r\n                    <ul className=\"list-group\">\r\n                      {tutorials &&\r\n                        tutorials.map((tutorial, index) => (\r\n                          <li\r\n                            className={\r\n                              \"list-group-item \" +\r\n                              (index === currentIndex ? \"active\" : \"\")\r\n                            }\r\n                            onClick={() => this.setActiveTutorial(tutorial, index)}\r\n                            key={index}\r\n                          >\r\n                            {tutorial.title}\r\n                          </li>\r\n                        ))}\r\n                    </ul>\r\n                    <button\r\n                      className=\"m-3 btn btn-sm btn-danger\"\r\n                      onClick={this.removeAllTutorials}\r\n                    >\r\n                      Remove All\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    {currentTutorial ? (\r\n                      <div>\r\n                        <h4>Tutorial</h4>\r\n                        <div>\r\n                          <label>\r\n                            <strong>Title:</strong>\r\n                          </label>{\" \"}\r\n                          {currentTutorial.title}\r\n                        </div>\r\n                        <div>\r\n                          <label>\r\n                            <strong>Description:</strong>\r\n                          </label>{\" \"}\r\n                          {currentTutorial.description}\r\n                        </div>\r\n                        <div>\r\n                          <label>\r\n                            <strong>Status:</strong>\r\n                          </label>{\" \"}\r\n                          {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n                        </div>\r\n          \r\n                        <Link\r\n                          to={\"/tutorials/\" + currentTutorial.id}\r\n                          className=\"badge badge-warning\"\r\n                        >\r\n                          Edit\r\n                        </Link>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <br />\r\n                        <p>Please click on a Tutorial...</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n    }\r\n}\r\n\r\nexport default TutorialList;","import React, { Component } from 'react'\r\nimport TutorialDataService from '../service/tutorialService';\r\n\r\n\r\nclass EditTutorial extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             currentTutorial : {\r\n                 id:null,\r\n                 title:'',\r\n                 description: '',\r\n                 published: false\r\n             },\r\n             message:''\r\n        }\r\n    }\r\n    \r\n    getTutorial = (id) =>{\r\n        TutorialDataService.get(id)\r\n                .then(response =>{\r\n                    this.setState({\r\n                       currentTutorial: response.data\r\n                    })\r\n                    console.log(response.data)\r\n                })\r\n                .catch(error =>{\r\n                    console.log(error)\r\n                })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getTutorial(this.props.match.params.id);\r\n    }\r\n\r\n    onChangeTitle = (event) =>{   \r\n        \r\n        this.setState( prevState => ({\r\n            currentTutorial : {\r\n                ...prevState.currentTutorial,\r\n                title : event.target.value\r\n            }\r\n        }))\r\n    }\r\n\r\n    onChangeDescription = (event) =>{\r\n        this.setState( prevState => ({\r\n            currentTutorial : {\r\n                ...prevState.currentTutorial,\r\n                description : event.target.value\r\n            }\r\n        }))\r\n    }\r\n\r\n  \r\n    updatePublished = (status) => {\r\n        let data ={\r\n            id: this.state.currentTutorial.id,\r\n            title: this.state.currentTutorial.title,\r\n            description: this.state.currentTutorial.description,\r\n            published: status\r\n        }\r\n\r\n        TutorialDataService.update(data.id,data)\r\n                        .then( response =>{\r\n                            this.setState( prevState => ({\r\n                                currentTutorial:{\r\n                                    ...prevState.currentTutorial,\r\n                                    published: status\r\n                                }\r\n                            }))\r\n                            console.log(response.data)\r\n                        })\r\n                        .catch(error =>{\r\n                            console.log(error)\r\n                        })\r\n\r\n    }\r\n\r\n    updateTutorial =() =>{\r\n        let id = this.state.currentTutorial.id\r\n        let tutorial = this.state.currentTutorial\r\n        TutorialDataService.update(id, tutorial)\r\n                    .then(response =>{\r\n                        console.log(response.data)\r\n                        this.setState({\r\n                            message : \"Data updated successfully\"\r\n                        })\r\n                    })\r\n                    .catch(error => console.log(error))\r\n    }\r\n\r\n    deleteTutorial =() =>{\r\n        let id = this.state.currentTutorial.id\r\n        TutorialDataService.delete(id)\r\n                        .then(response =>{\r\n                            console.log(response.data)\r\n                            this.props.history.push('/tutorials')\r\n                        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { currentTutorial } = this.state\r\n        return (\r\n            <div>\r\n                {currentTutorial ?(\r\n                    <div className=\"edit-form\">\r\n                        <h4>Tutorial</h4>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"title\">Title</label>\r\n                                <input type=\"text\" className=\"form-control\"\r\n                                    value={currentTutorial.title}\r\n                                    onChange={this.onChangeTitle}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"description\">Description</label>\r\n                                <input type=\"text\" className=\"form-control\"\r\n                                    value={currentTutorial.description}\r\n                                    onChange={this.onChangeDescription}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Status:</label> \r\n                                {currentTutorial.published ? \"Published\": \"Pending\"}\r\n                            </div>\r\n                        </form>\r\n\r\n                        <p>{this.state.message}</p>\r\n                        {currentTutorial.published ? (\r\n                            <button className=\"badge badge-primary mr-2\"\r\n                                    onClick={() => this.updatePublished(false)}    \r\n                            >\r\n                            Unpublish\r\n                            </button>\r\n                        ):(\r\n                            <button className=\"badge badge-primary mr-2\"\r\n                                    onClick={() => this.updatePublished(true)}\r\n                            >\r\n                            Publish   \r\n                            </button>\r\n                        )}\r\n\r\n                        <button type=\"submit\" className=\"badge badge-success\"\r\n                                onClick={this.updateTutorial}>\r\n                            Update</button> {\"   \"}                     \r\n                        <button className=\"badge badge-danger mr-2\" \r\n                                onClick={this.deleteTutorial}>\r\n                        Delete</button>\r\n                    </div>\r\n                ):(\r\n                    <div>\r\n                        <p>Click on any Tutorial</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditTutorial\r\n","import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React,{ Component} from 'react';\nimport AddTutorial from './components/addTutorialComponent';\nimport TutorialList from './components/tutorialListComponent';\nimport { Switch,Link,Route } from 'react-router-dom';\nimport EditTutorial from './components/editTutorialComponent';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/tutorials\" className=\"navbar-brand\">\n          TutorialList\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/tutorials\"} className=\"nav-link\">\n              Tutorials\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/add\"} className=\"nav-link\">\n              Add\n            </Link>\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialList} />\n          <Route exact path=\"/add\" component={AddTutorial} />\n          <Route path=\"/tutorials/:id\" component={EditTutorial} />\n        </Switch>\n      </div>\n    </div>\n\n\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}